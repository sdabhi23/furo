{"version":3,"sources":["gumshoe-5.1.2-patched.js","main.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","root","factory","define","amd","exports","module","Gumshoe","global","window","emitEvent","type","elem","detail","settings","events","event","CustomEvent","bubbles","cancelable","dispatchEvent","getOffsetTop","location","offsetParent","offsetTop","sortContents","contents","sort","item1","item2","content","isInView","bottom","bounds","getBoundingClientRect","offset","parseFloat","parseInt","innerHeight","document","documentElement","clientHeight","top","isAtBottom","Math","ceil","pageYOffset","max","body","scrollHeight","offsetHeight","getActive","item","last","length","i","deactivateNested","nav","nested","parentNode","li","closest","classList","remove","nestedClass","deactivate","items","navClass","contentClass","link","activateNested","add","defaults","reflow","selector","options","navItems","current","timeout","publicAPIs","setup","querySelectorAll","Array","forEach","call","getElementById","decodeURIComponent","hash","substr","push","detect","active","scrollHandler","cancelAnimationFrame","requestAnimationFrame","resizeHandler","destroy","removeEventListener","merged","arguments","key","hasOwnProperty","extend","addEventListener","tocScroll","header","scrollHandlerForHeader","floor","scrollHandlerForTOC","positionY","scrollTo","querySelector","setupScrollHandler","last_known_scroll_position","ticking","e","scrollY","scroll","setupScrollSpy","recursive","toggleTheme","topNode","getElementsByTagName","currentTheme","localStorage","getItem","currentClass","className","replace","setItem","console","log","main"],"mappings":"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","file":"main.js","sourcesContent":["\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/*!\n * gumshoejs v5.1.2 (patched by @pradyunsg)\n * A simple, framework-agnostic scrollspy script.\n * (c) 2019 Chris Ferdinandi\n * MIT License\n * http://github.com/cferdinandi/gumshoe\n */\n(function (root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], function () {\n      return factory(root);\n    });\n  } else if ((typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) === \"object\") {\n    module.exports = factory(root);\n  } else {\n    root.Gumshoe = factory(root);\n  }\n})(typeof global !== \"undefined\" ? global : typeof window !== \"undefined\" ? window : void 0, function (window) {\n  \"use strict\"; //\n  // Defaults\n  //\n\n  var defaults = {\n    // Active classes\n    navClass: \"active\",\n    contentClass: \"active\",\n    // Nested navigation\n    nested: false,\n    nestedClass: \"active\",\n    // Offset & reflow\n    offset: 0,\n    reflow: false,\n    // Event support\n    events: true\n  }; //\n  // Methods\n  //\n\n  /**\n   * Merge two or more objects together.\n   * @param   {Object}   objects  The objects to merge together\n   * @returns {Object}            Merged values of defaults and options\n   */\n\n  var extend = function extend() {\n    var merged = {};\n    Array.prototype.forEach.call(arguments, function (obj) {\n      for (var key in obj) {\n        if (!obj.hasOwnProperty(key)) return;\n        merged[key] = obj[key];\n      }\n    });\n    return merged;\n  };\n  /**\n   * Emit a custom event\n   * @param  {String} type   The event type\n   * @param  {Node}   elem   The element to attach the event to\n   * @param  {Object} detail Any details to pass along with the event\n   */\n\n\n  var emitEvent = function emitEvent(type, elem, detail) {\n    // Make sure events are enabled\n    if (!detail.settings.events) return; // Create a new event\n\n    var event = new CustomEvent(type, {\n      bubbles: true,\n      cancelable: true,\n      detail: detail\n    }); // Dispatch the event\n\n    elem.dispatchEvent(event);\n  };\n  /**\n   * Get an element's distance from the top of the Document.\n   * @param  {Node} elem The element\n   * @return {Number}    Distance from the top in pixels\n   */\n\n\n  var getOffsetTop = function getOffsetTop(elem) {\n    var location = 0;\n\n    if (elem.offsetParent) {\n      while (elem) {\n        location += elem.offsetTop;\n        elem = elem.offsetParent;\n      }\n    }\n\n    return location >= 0 ? location : 0;\n  };\n  /**\n   * Sort content from first to last in the DOM\n   * @param  {Array} contents The content areas\n   */\n\n\n  var sortContents = function sortContents(contents) {\n    if (contents) {\n      contents.sort(function (item1, item2) {\n        var offset1 = getOffsetTop(item1.content);\n        var offset2 = getOffsetTop(item2.content);\n        if (offset1 < offset2) return -1;\n        return 1;\n      });\n    }\n  };\n  /**\n   * Get the offset to use for calculating position\n   * @param  {Object} settings The settings for this instantiation\n   * @return {Float}           The number of pixels to offset the calculations\n   */\n\n\n  var getOffset = function getOffset(settings) {\n    // if the offset is a function run it\n    if (typeof settings.offset === \"function\") {\n      return parseFloat(settings.offset());\n    } // Otherwise, return it as-is\n\n\n    return parseFloat(settings.offset);\n  };\n  /**\n   * Get the document element's height\n   * @private\n   * @returns {Number}\n   */\n\n\n  var getDocumentHeight = function getDocumentHeight() {\n    return Math.max(document.body.scrollHeight, document.documentElement.scrollHeight, document.body.offsetHeight, document.documentElement.offsetHeight, document.body.clientHeight, document.documentElement.clientHeight);\n  };\n  /**\n   * Determine if an element is in view\n   * @param  {Node}    elem     The element\n   * @param  {Object}  settings The settings for this instantiation\n   * @param  {Boolean} bottom   If true, check if element is above bottom of viewport instead\n   * @return {Boolean}          Returns true if element is in the viewport\n   */\n\n\n  var isInView = function isInView(elem, settings, bottom) {\n    var bounds = elem.getBoundingClientRect();\n    var offset = getOffset(settings);\n\n    if (bottom) {\n      return parseInt(bounds.bottom, 10) < (window.innerHeight || document.documentElement.clientHeight);\n    }\n\n    return parseInt(bounds.top, 10) <= offset;\n  };\n  /**\n   * Check if at the bottom of the viewport\n   * @return {Boolean} If true, page is at the bottom of the viewport\n   */\n\n\n  var isAtBottom = function isAtBottom() {\n    if (Math.ceil(window.innerHeight + window.pageYOffset) >= getDocumentHeight()) return true;\n    return false;\n  };\n  /**\n   * Check if the last item should be used (even if not at the top of the page)\n   * @param  {Object} item     The last item\n   * @param  {Object} settings The settings for this instantiation\n   * @return {Boolean}         If true, use the last item\n   */\n\n\n  var useLastItem = function useLastItem(item, settings) {\n    if (isAtBottom() && isInView(item.content, settings, true)) return true;\n    return false;\n  };\n  /**\n   * Get the active content\n   * @param  {Array}  contents The content areas\n   * @param  {Object} settings The settings for this instantiation\n   * @return {Object}          The content area and matching navigation link\n   */\n\n\n  var getActive = function getActive(contents, settings) {\n    var last = contents[contents.length - 1];\n    if (useLastItem(last, settings)) return last;\n\n    for (var i = contents.length - 1; i >= 0; i--) {\n      if (isInView(contents[i].content, settings)) return contents[i];\n    }\n  };\n  /**\n   * Deactivate parent navs in a nested navigation\n   * @param  {Node}   nav      The starting navigation element\n   * @param  {Object} settings The settings for this instantiation\n   */\n\n\n  var deactivateNested = function deactivateNested(nav, settings) {\n    // If nesting isn't activated, bail\n    if (!settings.nested || !nav.parentNode) return; // Get the parent navigation\n\n    var li = nav.parentNode.closest(\"li\");\n    if (!li) return; // Remove the active class\n\n    li.classList.remove(settings.nestedClass); // Apply recursively to any parent navigation elements\n\n    deactivateNested(li, settings);\n  };\n  /**\n   * Deactivate a nav and content area\n   * @param  {Object} items    The nav item and content to deactivate\n   * @param  {Object} settings The settings for this instantiation\n   */\n\n\n  var deactivate = function deactivate(items, settings) {\n    // Make sure there are items to deactivate\n    if (!items) return; // Get the parent list item\n\n    var li = items.nav.closest(\"li\");\n    if (!li) return; // Remove the active class from the nav and content\n\n    li.classList.remove(settings.navClass);\n    items.content.classList.remove(settings.contentClass); // Deactivate any parent navs in a nested navigation\n\n    deactivateNested(li, settings); // Emit a custom event\n\n    emitEvent(\"gumshoeDeactivate\", li, {\n      link: items.nav,\n      content: items.content,\n      settings: settings\n    });\n  };\n  /**\n   * Activate parent navs in a nested navigation\n   * @param  {Node}   nav      The starting navigation element\n   * @param  {Object} settings The settings for this instantiation\n   */\n\n\n  var activateNested = function activateNested(nav, settings) {\n    // If nesting isn't activated, bail\n    if (!settings.nested) return; // Get the parent navigation\n\n    var li = nav.parentNode.closest(\"li\");\n    if (!li) return; // Add the active class\n\n    li.classList.add(settings.nestedClass); // Apply recursively to any parent navigation elements\n\n    activateNested(li, settings);\n  };\n  /**\n   * Activate a nav and content area\n   * @param  {Object} items    The nav item and content to activate\n   * @param  {Object} settings The settings for this instantiation\n   */\n\n\n  var activate = function activate(items, settings) {\n    // Make sure there are items to activate\n    if (!items) return; // Get the parent list item\n\n    var li = items.nav.closest(\"li\");\n    if (!li) return; // Add the active class to the nav and content\n\n    li.classList.add(settings.navClass);\n    items.content.classList.add(settings.contentClass); // Activate any parent navs in a nested navigation\n\n    activateNested(li, settings); // Emit a custom event\n\n    emitEvent(\"gumshoeActivate\", li, {\n      link: items.nav,\n      content: items.content,\n      settings: settings\n    });\n  };\n  /**\n   * Create the Constructor object\n   * @param {String} selector The selector to use for navigation items\n   * @param {Object} options  User options and settings\n   */\n\n\n  var Constructor = function Constructor(selector, options) {\n    //\n    // Variables\n    //\n    var publicAPIs = {};\n    var navItems, contents, current, timeout, settings; //\n    // Methods\n    //\n\n    /**\n     * Set variables from DOM elements\n     */\n\n    publicAPIs.setup = function () {\n      // Get all nav items\n      navItems = document.querySelectorAll(selector); // Create contents array\n\n      contents = []; // Loop through each item, get it's matching content, and push to the array\n\n      Array.prototype.forEach.call(navItems, function (item) {\n        // Get the content for the nav item\n        var content = document.getElementById(decodeURIComponent(item.hash.substr(1)));\n        if (!content) return; // Push to the contents array\n\n        contents.push({\n          nav: item,\n          content: content\n        });\n      }); // Sort contents by the order they appear in the DOM\n\n      sortContents(contents);\n    };\n    /**\n     * Detect which content is currently active\n     */\n\n\n    publicAPIs.detect = function () {\n      // Get the active content\n      var active = getActive(contents, settings); // if there's no active content, deactivate and bail\n\n      if (!active) {\n        if (current) {\n          deactivate(current, settings);\n          current = null;\n        }\n\n        return;\n      } // If the active content is the one currently active, do nothing\n\n\n      if (current && active.content === current.content) return; // Deactivate the current content and activate the new content\n\n      deactivate(current, settings);\n      activate(active, settings); // Update the currently active content\n\n      current = active;\n    };\n    /**\n     * Detect the active content on scroll\n     * Debounced for performance\n     */\n\n\n    var scrollHandler = function scrollHandler(event) {\n      // If there's a timer, cancel it\n      if (timeout) {\n        window.cancelAnimationFrame(timeout);\n      } // Setup debounce callback\n\n\n      timeout = window.requestAnimationFrame(publicAPIs.detect);\n    };\n    /**\n     * Update content sorting on resize\n     * Debounced for performance\n     */\n\n\n    var resizeHandler = function resizeHandler(event) {\n      // If there's a timer, cancel it\n      if (timeout) {\n        window.cancelAnimationFrame(timeout);\n      } // Setup debounce callback\n\n\n      timeout = window.requestAnimationFrame(function () {\n        sortContents(contents);\n        publicAPIs.detect();\n      });\n    };\n    /**\n     * Destroy the current instantiation\n     */\n\n\n    publicAPIs.destroy = function () {\n      // Undo DOM changes\n      if (current) {\n        deactivate(current, settings);\n      } // Remove event listeners\n\n\n      window.removeEventListener(\"scroll\", scrollHandler, false);\n\n      if (settings.reflow) {\n        window.removeEventListener(\"resize\", resizeHandler, false);\n      } // Reset variables\n\n\n      contents = null;\n      navItems = null;\n      current = null;\n      timeout = null;\n      settings = null;\n    };\n    /**\n     * Initialize the current instantiation\n     */\n\n\n    var init = function init() {\n      // Merge user options into defaults\n      settings = extend(defaults, options || {}); // Setup variables based on the current DOM\n\n      publicAPIs.setup(); // Find the currently active content\n\n      publicAPIs.detect(); // Setup event listeners\n\n      window.addEventListener(\"scroll\", scrollHandler, false);\n\n      if (settings.reflow) {\n        window.addEventListener(\"resize\", resizeHandler, false);\n      }\n    }; //\n    // Initialize and return the public APIs\n    //\n\n\n    init();\n    return publicAPIs;\n  }; //\n  // Return the Constructor\n  //\n\n\n  return Constructor;\n});","\"use strict\";\n\n////////////////////////////////////////////////////////////////////////////////\n// Scroll Handling\n////////////////////////////////////////////////////////////////////////////////\nvar tocScroll = null;\nvar header = null;\n\nfunction scrollHandlerForHeader() {\n  if (Math.floor(header.getBoundingClientRect().top) == 0) {\n    header.classList.add(\"scrolled\");\n  } else {\n    header.classList.remove(\"scrolled\");\n  }\n}\n\nfunction scrollHandlerForTOC(positionY) {\n  if (tocScroll === null) {\n    return;\n  } // top of page.\n\n\n  if (positionY == 0) {\n    tocScroll.scrollTo(0, 0);\n  } else if ( // bottom of page.\n  Math.ceil(positionY) >= Math.floor(document.documentElement.scrollHeight - window.innerHeight)) {\n    tocScroll.scrollTo(0, tocScroll.scrollHeight);\n  } else {\n    // somewhere in the middle.\n    var current = document.querySelector(\".scroll-current\");\n\n    if (current == null) {\n      return;\n    } // https://github.com/pypa/pip/issues/9159 This breaks scroll behaviours.\n    // // scroll the currently \"active\" heading in toc, into view.\n    // const rect = current.getBoundingClientRect();\n    // if (0 > rect.top) {\n    //   current.scrollIntoView(true); // the argument is \"alignTop\"\n    // } else if (rect.bottom > window.innerHeight) {\n    //   current.scrollIntoView(false);\n    // }\n\n  }\n}\n\nfunction scrollHandler(positionY) {\n  scrollHandlerForHeader();\n  scrollHandlerForTOC(positionY);\n} ////////////////////////////////////////////////////////////////////////////////\n// Setup\n////////////////////////////////////////////////////////////////////////////////\n\n\nfunction setupScrollHandler() {\n  // Taken from https://developer.mozilla.org/en-US/docs/Web/API/Document/scroll_event\n  var last_known_scroll_position = 0;\n  var ticking = false;\n  window.addEventListener(\"scroll\", function (e) {\n    last_known_scroll_position = window.scrollY;\n\n    if (!ticking) {\n      window.requestAnimationFrame(function () {\n        scrollHandler(last_known_scroll_position);\n        ticking = false;\n      });\n      ticking = true;\n    }\n  });\n  window.scroll();\n}\n\nfunction setupScrollSpy() {\n  if (tocScroll === null) {\n    return;\n  } // Scrollspy -- highlight table on contents, based on scroll\n\n\n  var spy = new Gumshoe(\".toc-tree a\", {\n    reflow: true,\n    recursive: true,\n    navClass: \"scroll-current\"\n  });\n} ////////////////////////////////////////////////////////////////////////////////\n// Color Theme Handling\n////////////////////////////////////////////////////////////////////////////////\n\n\nfunction toggleTheme() {\n  var topNode = document.getElementsByTagName(\"html\")[0];\n  var currentTheme = localStorage.getItem(\"theme\");\n  var currentClass = topNode.className;\n\n  if (currentTheme === \"dark\") {\n    topNode.className = currentClass.replace(\"dark\", \"light\");\n    localStorage.setItem(\"theme\", \"light\");\n  } else if (currentTheme === \"light\") {\n    topNode.className = currentClass.replace(\"light\", \"dark\");\n    localStorage.setItem(\"theme\", \"dark\");\n  }\n\n  console.log(\"Toggled theme!\");\n}\n\nfunction setup() {\n  setupScrollHandler();\n  setupScrollSpy();\n}\n\nfunction main() {\n  document.body.parentNode.classList.remove(\"no-js\");\n  header = document.querySelector(\"header\");\n  tocScroll = document.querySelector(\".toc-scroll\");\n  setup();\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", main);"]}